#!/bin/bash -eu

set -o pipefail

readonly NEW_LIST_FILE=/etc/fail2ban/referer-spam-blacklist.txt
readonly OLD_LIST_FILE=${NEW_LIST_FILE}.old

# auto cleanup
at_exit() {
  set +u
  rm -Rf "$TMP_DIR"
  set -u
}
trap at_exit EXIT

readonly TMP_DIR=$(mktemp -d /tmp/$(basename -- $0).XXXXXXXXXX)
readonly TMP_DIFF_FILE=$TMP_DIR/diff.patch


# rotation
if [ ! -f ${NEW_LIST_FILE} ]
then
  : > ${NEW_LIST_FILE}
fi
mv ${NEW_LIST_FILE} ${OLD_LIST_FILE}

# download blocklist while getting around stupid github hotlink protection
pushd $TMP_DIR > /dev/null
git clone -q https://github.com/desbma/referer-spam-domains-blacklist.git
popd  > /dev/null
cp $TMP_DIR/referer-spam-domains-blacklist/spammers.txt ${NEW_LIST_FILE}

# stats
list_changed=false
diff -U 0 ${OLD_LIST_FILE} ${NEW_LIST_FILE} | tail -n +3 > $TMP_DIFF_FILE || list_changed=true
echo "$(grep -c '^+' $TMP_DIFF_FILE) domains added, $(grep -c '^-' $TMP_DIFF_FILE) removed"

if $list_changed
then
  # generate filter file
  echo "# Fail2Ban configuration file
#

# Autogenerated by $(readlink -f $0) @ $(date --rfc-3339 seconds)

[Definition]

failregex = ^<HOST> -.*\"(GET|POST).*HTTP.*\".+\"https?://(.*\.)?($(grep -v '^$' ${NEW_LIST_FILE} | tr '\n' '|' | sed 's/\./\\./g' | sed 's/|$//')).*\" \".*\"$

ignoreregex =
" > /etc/fail2ban/filter.d/apache-referer.local

  # reload fail2ban
  service fail2ban reload  2>&1 > /dev/null
fi
